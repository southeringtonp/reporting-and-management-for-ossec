
+ Overview
-----------------------------------------------------------

This package contains parsing logic, saved searches, and
dashboards for monitoring the OSSEC Host-based Intrusion
Detection System via Splunk.

Please read the Installation section below - the app will
not work correctly without configuration.

Some functionality, primarily agent management, is not
currently supported when Splunk is running on Windows.



+ Installation
-----------------------------------------------------------

To install, extract the .tgz archive in $SPLUNK_HOME/etc/apps

You may need to enable the appropriate inputs, either via
inputs.conf, or through the Manager in the Splunk GUI.

The application maintains a list of all known OSSEC
servers in a lookup table. When you first install, this
list will be empty except for a wildcard entry. You can
wait until it is populated automatically, or run 
[OSSEC - Rebuild OSSEC Server Lookup Table] from the
Searches & Reports -> Utility menu.




+ Upgrading
-----------------------------------------------------------

This version introduces a number of changes from version
1.0 (see the CHANGES file). The recommended procedure is
to remove the old app before installing. Installing over
top of older versions should (mostly) work, but may cause
some problems.



+ Data Inputs
-----------------------------------------------------------

Sample input declarations are included with the application,
but are disabled by default. These may be enabled either
in inputs.conf, or via the Manager.

Several data input methods are available:
   
   1) Native syslog daemon, writing to flat files which
      are indexed by Splunk.

   2) Syslog-style input directly to Splunk, listening
      on a UDP port (this is the method often used by the
      Splunk for OSSEC 3.x application)

   3) Direct monitoring of OSSEC alert logs. Typically
      requires Splunk to be installed on the OSSEC server.

   4) Scripted input to periodically check the status of
      OSSEC agents by running ossec_agent_control -l,
      either locally or on a remote system.

For options (1) and (2), set the sourcetype to 'ossec'.
For option (3), set the sourcetype to 'ossec_alerts'.
For option (4), set the sourcetype to 'ossec_agent_control'.




+ Collection of OSSEC agent Operational Status:
-----------------------------------------------------------

To collect OSSEC agent status, you will need to be able
run the agent_control command without a password.

For local OSSEC servers using the default path, this is
configured by default. For non-standard install paths,
you will need to edit ossec_servers.conf. 

For remote execution, see below.



+ Managing Agent Keys from Splunk
-----------------------------------------------------------

To enable key management, you will need to be able to run
the manage_agents command without a password. You will also
need to be a member of either the Splunk Admin role or the
OSSEC Admin role.

This feature is not enabled by default for security reasons.
You can enable it by editing ossec_servers.conf.

For remote execution, see below.




+ Enabling Remote Execution
-----------------------------------------------------------

For remote agent status collection and remote management, you
can use SSH and sudo to avoid password prompts:

    1) Create a unix user account for splunk on the OSSEC server.

    2) Create an ssh keypair allowing the Splunk server to log in
       without a password.

    3) Place the ssh private key on the Splunk server in a secure
       location.

    4) Set privileges to allow the user access to OSSEC, or
       add the following lines to /etc/sudoers:
            splunk	ALL = NOPASSWD: /var/ossec/bin/agent_control -l
            splunk	ALL = NOPASSWD: /var/ossec/bin/manage_agents

       If you will not be managing agent keys from Splunk, omit
       the second line. Don't forget that sudoers is picky about
       whitespace.

    5) On the Splunk server, edit ossec_servers.conf, providing the
       command line to run. The command should include ssh and sudo if
       neded.

    6) Run the script once manually to test. This will also give you the
       chance to accept the server's private key. You will need to do this
       under the account that the Splunk server is using, e.g.:
           sudo bin/ossec_status.py -v

    7) Verify that the scripted input is enabled (it is now turned on
       by default)



+ Agent Coverage Tracking
-----------------------------------------------------------

At present, the agent coverage dashboard currently relies
on agent status information from the agent_control command
(see above). A Splunk Enterprise license is needed for
the scheduled searches.

To use agent coverage tracking, you must populate a lookup
table that tracks all hosts that should be monitored by
OSSEC. By default, all hosts seen by Splunk in the last
30 days will be expected.

Edit the saved search [OSSEC - Track Expected Hosts] to
configure your own list. For example, all servers or all
members of a particular LDAP container.





+ Malware Alerting
-----------------------------------------------------------

Alerting on malware file hashes only works when Splunk is
directly monitoring the ossec alerts log (Syslog-based
logging does not include the hashes).

If you are using this method, you can configure your email
address and enable the alert from the Manager.

The MD5 and SHA1 file hashes will be sent to a third party
(Team Cymru) for validation.

No guarantees of accuracy are provided.



+ 3rd-Party Components / Disclaimers
-----------------------------------------------------------

This app includes third-party components and/or interfaces with
third-party services. See the 3rdparty directory for details.

OSSEC is a product of Daniel Cid and Trend Micro. The app
author is not afilliated with Trend Micro.

Splunk for OSSEC neither supported nor endorsed by Trend Micro
or the OSSEC developers. The author makes no warranties or
guarantees of any kind. Use is at your own risk.

