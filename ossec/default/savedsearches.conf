############################################################
# OSSEC Saved Searches
############################################################



############################################################
# Top XXX Searches
############################################################

[OSSEC - Top Signatures]
enableSched = 0
search = eventtype=ossec | top limit=100 signature
dispatch.earliest_time = -24h
vsid = ossecpie


[OSSEC - Top Reporting Hosts]
enableSched = 0
search = eventtype=ossec | top limit=100 reporting_host
dispatch.earliest_time = -24h
vsid = *:ggpttjjf


#[top-ossec-rule-last-24hrs]
[OSSEC - Top Rules]
enableSched = 0
search = eventtype=ossec | top limit=100 rule_number
dispatch.earliest_time = -24h
vsid = *:ggpttjjf


[OSSEC - Top Severity]
enableSched = 0
search = eventtype=ossec | top limit=100 severity
dispatch.earliest_time = -24h
vsid = *:ggpttjjf


[OSSEC - Top Source IP]
enableSched = 0
search = eventtype=ossec | top limit=100 src_ip
dispatch.earliest_time = -24h
vsid = *:ggpttjjf


#[ossec-alert-top-user-last-24hrs]
[OSSEC - Top Users]
enableSched = 0
search = eventtype=ossec | top limit=100 user
dispatch.earliest_time = -24h
vsid = *:ggpttjjf




############################################################
# Top XXX Searches (Summary Data)
############################################################

[OSSEC - SI - Top Signatures]
enableSched = 0
search = index=summary ossec hourly rollup | top limit=100 signature
dispatch.earliest_time = -7d
vsid = ossecpie


[OSSEC - SI - Top Reporting Hosts]
enableSched = 0
search = index=summary ossec hourly rollup | top limit=100 reporting_host
dispatch.earliest_time = -7d
vsid = *:ggpttjjf


[OSSEC - SI - Top Rules]
enableSched = 0
search = index=summary ossec hourly rollup | top limit=100 rule_number
dispatch.earliest_time = -7d
vsid = *:ggpttjjf


[OSSEC - SI - Top Severity]
enableSched = 0
search = index=summary ossec hourly rollup | top limit=100 severity
dispatch.earliest_time = -7d
vsid = *:ggpttjjf


[OSSEC - SI - Top Source IP]
enableSched = 0
search = index=summary ossec hourly rollup | top limit=100 src_ip
dispatch.earliest_time = -7d
vsid = *:ggpttjjf


[OSSEC - Top Users]
enableSched = 0
search = index=summary ossec hourly rollup | top limit=100 user
dispatch.earliest_time = -7d
vsid = *:ggpttjjf





############################################################
# Timelines
############################################################


[OSSEC - Timechart of Signature]
enableSched = 0
search = eventtype=ossec | timechart count by signature
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea


[OSSEC - Timechart of Reporting Host]
enableSched = 0
search = eventtype=ossec | timechart count by reporting_host
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea


#[top-ossec-rule-by-time-last-hour]
[OSSEC - Timechart of Rule Number]
enableSched = 0
search = eventtype=ossec | timechart count by rule_number
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea


#[ossec-alert-level-by-time-last-24hrs]
[OSSEC - Timechart of Severity]
enableSched = 0
search = eventtype=ossec | timechart count by severity
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
viewstate.chart.seriesFormats.0.plotMode = area
vsid = *:ossecarea


[OSSEC - Timechart of Source IP]
enableSched = 0
search = eventtype=ossec | timechart count by src_ip
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea


[OSSEC - Timechart of User]
enableSched = 0
search = eventtype=ossec | timechart count by user
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea



############################################################
# Timelines (Summary Data)
############################################################


[OSSEC - SI - Timechart of Signature]
enableSched = 0
search = index=summary ossec hourly rollup | timechart count by signature
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea

[OSSEC - SI - Timechart of Reporting Host]
enableSched = 0
search = index=summary ossec hourly rollup | timechart count by reporting_host
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea


#[top-ossec-rule-by-time-last-hour]
[OSSEC - SI - Timechart of Rule Number]
enableSched = 0
search = index=summary ossec hourly rollup | timechart count by rule_number
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea


#[ossec-alert-level-by-time-last-24hrs]
[OSSEC - SI - Timechart of Severity]
enableSched = 0
search = index=summary ossec hourly rollup | timechart count by severity
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
viewstate.chart.seriesFormats.0.plotMode = area
vsid = *:ossecarea


[OSSEC - SI - Timechart of Source IP]
enableSched = 0
search = index=summary ossec hourly rollup | timechart count by src_ip
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea


[OSSEC - SI - Timechart of User]
enableSched = 0
search = index=summary ossec hourly rollup | timechart count by user
dispatch.earliest_time = -24h
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
vsid = *:ossecarea






############################################################
# Searches for Specific Classes of Events
############################################################

#[ossec-bruteforce-top-source-ip-last-24hrs]
[OSSEC - Bruteforce - Top Source IP]
search = eventtype=ossec tag::eventtype=bruteforce | top limit=100 src_ip
dispatch.earliest_time = -24h
vsid = *:ggpttjjf


[OSSEC - Unix Package Changes]
enableSched = 0
search = eventtype=ossec eventtype=ossec_package_change
dispatch.earliest_time = -24h
vsid = *:ggpttjjf


[OSSEC - File Changes]
search = eventtype=ossec integrity NOT HKEY NOT tag::eventtype=noise | transaction reporting_host,file_dirname
dispatch.earliest_time = -24h
vsid = *:ggpttjjf


[OSSEC - Registry Changes]
search = eventtype=ossec integrity HKEY NOT tag::eventtype=noise | transaction reporting_host,file_dirname
dispatch.earliest_time = -24h
vsid = *:ggpttjjf


[OSSEC - Malware Hash Check]
search = eventtype=ossec integrity NOT HKEY NOT tag::eventtype=noise (sha1_new=* OR md5_new=*) | malchk sha1_new,md5_new | search is_malware=True
dispatch.earliest_time = -24h
vsid = gdi1irbn




############################################################
# Email Alerting
############################################################

[OSSEC - Malware Alert]
action.email = 1
action.email.to = yournamehere@example.com
counttype = number of events
cron_schedule = */30 * * * *
description = Enable this search to alert when OSSEC reports a hash that is reported as potential malware by the Cymru MHR.
dispatch.earliest_time = -33m@m
dispatch.latest_time = -3m@m
displayview = flashtimeline
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = eventtype="ossec" integrity NOT HKEY NOT tag::eventtype=noise (sha1_new=* OR md5_new=*) | malchk sha1_new,md5_new | search is_malware=True | fields reporting_host, file_name, is_malware, md5_new_detection_percent, sha1_new_detection_percent
vsid = gdi1irbn


[OSSEC - High-Severity Alert]
action.email = 1
action.email.to = yournamehere@example.com
counttype = number of events
cron_schedule = */60 * * * *
description = Enable this search to alert when OSSEC reports a high-severity event. Remember that the OSSEC server can also do this natively, so you may wish to configure it there instead.
dispatch.earliest_time = -2m@m
dispatch.latest_time = -1m@m
displayview = flashtimeline
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = eventtype=ossec severity>10 | convert ctime(_time) as timestamp | fields timestamp, reporting_host, rule_number, signature, user, src_ip
vsid = gdi1irbx





############################################################
# Operational Searches
############################################################

[OSSEC - Agent Status]
search = sourcetype="ossec_agent_control" | sort -_time | sort agent_id | convert ctime(_time) as timestamp | stats first(timestamp) as timestamp first(status) as status by ossec_server, agent_id, reporting_host | fields timestamp, ossec_server, agent_id, reporting_host, status
dispatch.earliest_time = -15m
vsid = *:ggpttjjf


[OSSEC - Agent Started/Disconnected]
description = OSSEC agent connect and disconnect events
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = sourcetype=ossec "ossec agent" started OR connected OR disconnected
vsid = ginc9cy6



############################################################
# Lookup Tables
############################################################

[OSSEC - Rebuild OSSEC Server Lookup Table]
# Look for recent OSSEC events and build the lookup table containing
# the list of OSSEC servers and whether management is enabled.
# Set the default description to just be hostname. By default,
# we rebuild the list hourly to pick up any new servers, but
# it is also safe to run this on-demand from the search menu.
#
# Eventually, this will probably use summary data insead.

search = eventtype=ossec | dedup ossec_server | eval description=host | inputlookup append=t lookup_ossec_servers | append [ ossecservers ] | stats last(description) as description max(managed) as managed by ossec_server | eval description=coalesce(description, ossec_server) | eval managed=coalesce(managed,0) | fields ossec_server,description,managed | outputlookup lookup_ossec_servers

dispatch.earliest_time = -15m
counttype = always
enableSched = 1
dispatch.earliest_time = -31m@m
dispatch.earliest_time = -1m@m
sendresults = 0
enableSched = 1
vsid = *:ggpttjjf



[OSSEC - Track Last Checkin]
#
# Track the last time we saw a host active.
# Currently requires agent management to be enabled
#
action.email.sendresults = 0
cron_schedule = */10 * * * *
description = Maintain a lookup table of the latest time each host checked in
dispatch.earliest_time = -30m
dispatch.latest_time = -0m
dispatch.lookups = 1
dispatch.spawn_process = 1
enableSched = 1
search = sourcetype=ossec_agent_control Active | rename _time as last_checkin | fields ossec_server, reporting_host, last_checkin | inputlookup append=t lookup_ossec_last_checkin | eval reporting_host=upper(reporting_host) | stats max(last_checkin) as last_checkin by ossec_server, reporting_host | outputlookup lookup_ossec_last_checkin
vsid = *:ggpttjjf



[OSSEC - Track Expected Hosts]
#
# Track the hosts that we think *should* be reporting events
#
action.email.sendresults = 0
cron_schedule = */10 * * * *
description = Customize this search to track hosts that should be covered. For example, all servers or all hosts in a given LDAP OU. The hostname must be 'reporting_host' - other fields included here will be reflected on the Agent Coverage dashboard.
dispatch.earliest_time = -30m
dispatch.latest_time = -0m
dispatch.lookups = 1
dispatch.spawn_process = 1
enableSched = 1
search = | metadata hosts | eval daysAgo=(now()-lastTime)/3660 | eval reporting_host=upper(host) | search daysAgo < 30 | fields reporting_host | outputlookup lookup_ossec_expected
vsid = *:ggpttjjf




############################################################
# Summary Indexing (requires Splunk Enterprise license)
############################################################

[OSSEC - SIGen - Hourly Rollup]
counttype = always
enableSched = 1
cron_schedule = 4 * * * *
dispatch.earliest_time = -1h@h
dispatch.latest_time = -0h@h
sendresults = 0
search = eventtype="ossec" NOT tag::eventtype=noise | fillnull value="-" signature,severity, reporting_host, user | stats count by ossec_server, rule_number, signature, severity, reporting_host, user | addinfo | collect index=summary marker="type=\"OSSEC Hourly Rollup\""
vsid = *:ggpttjjf
is_visible = false


[OSSEC - SIGen - Daily Rollup]
counttype = always
enableSched = 1
cron_schedule = 47 0 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = -0d@d
sendresults = 0
search = index=summary "OSSEC Hourly Rollup" | stats sum(count) as count by ossec_server, rule_number, signature, severity, reporting_host, user | addinfo | collect index=summary marker="type=\"OSSEC Daily Rollup\""
vsid = *:ggpttjjf
is_visible = false

###[OSSEC - SIGen - Rebuild OSSEC Server Lookup Table]
#### Same as manual version above, but leverages summary index.
#### Untested, use with caution.
###counttype = always
###enableSched = 1
###dispatch.earliest_time = -2h@h
###dispatch.earliest_time = -0h@h
###sendresults = 0
###search = (index=summary "OSSEC Hourly Rollup") | dedup ossec_server | eval description=host | inputlookup append=t lookup_ossec_servers | append [ ossecservers ] | stats last(description) as description max(managed) as managed by ossec_server | eval managed=coalesce(managed,0) | fields ossec_server,description,managed | outputlookup lookup_ossec_servers
###vsid = *:ggpttjjf

